# To add the required plugins:
include: package:lints/recommended.yaml

analyzer:
  errors:
    # treat missing required parameters as a warning (not a hint)
    missing_required_param: warning
    unnecessary_getters_setters: ignore

linter:
  rules:
    - avoid_print
    - avoid_unnecessary_containers
    - avoid_web_libraries_in_flutter
    - no_logic_in_create_state
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - sized_box_for_whitespace
    - sort_child_properties_last
    - use_full_hex_values_for_flutter_colors
    - use_key_in_widget_constructors
    # STYLE
    - unawaited_futures # Requires handling/awaiting all futures
    - unnecessary_await_in_return
    - prefer_single_quotes
    - camel_case_types
    - camel_case_extensions
    - library_names
    - file_names
    - library_prefixes
    - non_constant_identifier_names
    - constant_identifier_names # prefer
    - directives_ordering
    - lines_longer_than_80_chars # avoid
    - curly_braces_in_flow_control_structures
    - slash_for_doc_comments
    - package_api_docs # prefer
    - public_member_api_docs # prefer
    - implementation_imports
    - avoid_relative_lib_imports
    - prefer_relative_imports
    - prefer_adjacent_string_concatenation
    - prefer_interpolation_to_compose_strings # prefer
    - unnecessary_brace_in_string_interps # avoid
    - prefer_collection_literals
    - prefer_is_empty
    - prefer_is_not_empty
    - avoid_function_literals_in_foreach_calls # avoid
    - prefer_iterable_whereType
    - prefer_function_declarations_over_variables
    - unnecessary_lambdas
    - avoid_init_to_null
    - unnecessary_this
    - prefer_initializing_formals
    - type_init_formals
    - empty_constructor_bodies
    - unnecessary_new
    - unnecessary_const
    - avoid_catches_without_on_clauses # avoid
    - avoid_catching_errors
    - use_rethrow_when_possible
    - use_to_and_as_if_applicable # prefer
    - one_member_abstracts # avoid
    - avoid_classes_with_only_static_members # avoid
    - prefer_mixin
    - prefer_final_fields # prefer
    - use_setters_to_change_properties
    - avoid_setters_without_getters
    - avoid_returning_this # avoid
    - type_annotate_public_apis # prefer
    - omit_local_variable_types # avoid
    - avoid_types_on_closure_parameters # avoid
    - avoid_return_types_on_setters
    - prefer_generic_function_type_aliases
    - avoid_private_typedef_functions # prefer
    - avoid_positional_boolean_parameters # avoid
    - hash_and_equals
    - avoid_equals_and_hash_code_on_mutable_classes # avoid
    - avoid_null_checks_in_equality_operators